@page "/staff/vaccinepackagedetail/{PackageId:int}"
@inject ISessionStorageService SessionStorage
@inject NavigationManager Navigation
@inject IVaccinePackageDetailRepository VaccinePackageDetailRepository
@inject IVaccinePackageRepository VaccinePackageRepository
@inject IVaccineRepository VaccineRepository
@rendermode InteractiveServer

<div class="container-fluid">
    <div class="row">
        <StaffNavBar />

        <main class="col-md-9 col-lg-10 p-4">
            <h3 class="mb-3">Manage Vaccine Package Details for Package #@PackageId</h3>
            @if (!isAuthorized && hasRendered)
            {
                <div class="text-danger">Unauthorized access. Redirecting to error...</div>
            }
            else if (details == null || vaccines == null)
            {
                <p class="lead">Loading package details and vaccines...</p>
            }
            else if (!details.Any())
            {
                <div class="text-center p-4 bg-light border rounded">
                    <p class="lead">No package details found for this package.</p>
                    <div class="d-flex justify-content-center gap-2">
                        <button class="btn btn-primary" @onclick="ShowAddDetailModal">Add New Detail</button>
                        <button class="btn btn-secondary" @onclick="GoBack">Back</button>
                    </div>
                </div>
            }
            else
            {
                <div class="overflow-auto mt-3">
                    <div class="d-flex gap-2 mb-3">
                        <button class="btn btn-primary" @onclick="ShowAddDetailModal">Add New Detail</button>
                        <button class="btn btn-secondary" @onclick="GoBack">Back</button>
                    </div>
                    <table class="table table-hover table-light table-bordered custom-table">
                        <thead class="table-primary">
                            <tr>
                                <th scope="col">Detail ID</th>
                                <th scope="col">Vaccine</th>
                                <th scope="col">Package</th>
                                <th scope="col">Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detail in details)
                            {
                                <tr>
                                    <td>@detail.VaccinePackageDetailId.ToString("N").Substring(0, 8)</td>
                                    <td>@(detail.Vaccine?.Name ?? "N/A")</td>
                                    <td>@(detail.VaccinePackage?.PackageName ?? "N/A")</td>
                                    <td>@detail.PackagePrice</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }

            @if (showModal)
            {
                <div class="modal fade show d-block" tabindex="-1" @onclick="CloseModal">
                    <div class="modal-dialog modal-dialog-centered" @onclick:stopPropagation>
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Add New Vaccine Package Detail</h4>
                                <button type="button" class="btn-close" @onclick="CloseModal"></button>
                            </div>
                            <div class="modal-body">
                                <EditForm Model="@newDetail" OnValidSubmit="HandleAddDetail">
                                    <DataAnnotationsValidator />
                                    <ValidationSummary class="text-danger" />
                                    <div class="mb-3">
                                        <label class="form-label">Vaccine</label>
                                        <InputSelect @bind-Value="newDetail.FKVaccineId" class="form-control">
                                            <option value="">Select Vaccine</option>
                                            @foreach (var vaccine in vaccines)
                                            {
                                                <option value="@vaccine.VaccineId">@vaccine.Name</option>
                                            }
                                        </InputSelect>
                                        <ValidationMessage For="@(() => newDetail.FKVaccineId)" class="text-danger" />
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Price</label>
                                        <InputNumber @bind-Value="newDetail.PackagePrice" class="form-control" />
                                        <ValidationMessage For="@(() => newDetail.PackagePrice)" class="text-danger" />
                                    </div>
                                    <div class="d-flex gap-2">
                                        <button type="submit" class="btn btn-primary">Save</button>
                                        <button type="button" class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
                                    </div>
                                </EditForm>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </main>
    </div>
</div>

<style>
    .custom-table {
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

        .custom-table th, .custom-table td {
            padding: 12px;
            vertical-align: middle;
        }

        .custom-table thead th {
            background-color: #007bff;
            color: white;
            border-bottom: 2px solid #0056b3;
        }

        .custom-table tbody tr:hover {
            background-color: #f1f8ff;
            transition: background-color 0.2s;
        }
</style>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

@code {
    [Parameter]
    public int PackageId { get; set; }

    private bool hasRendered = false;
    private bool isAuthorized = false;
    private List<VaccinePackageDetail> details;
    private List<Vaccine> vaccines;
    private bool showModal = false;
    private VaccinePackageDetail newDetail = new VaccinePackageDetail();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasRendered)
        {
            var accountId = await SessionStorage.GetItemAsync<string>("AccountId");

            if (!string.IsNullOrEmpty(accountId))
            {
                var account = await GetAccountDetails(accountId);
                isAuthorized = account?.AccountRole == "Staff";
            }
            else
            {
                isAuthorized = false;
            }

            hasRendered = true;

            if (!isAuthorized)
            {
                Navigation.NavigateTo("/Error");
            }
            else
            {
                await LoadData();
            }
        }
    }

    private async Task LoadData()
    {
        try
        {
            details = VaccinePackageDetailRepository.GetVaccinePackageDetailsByPackage(PackageId) ?? new List<VaccinePackageDetail>();
            vaccines = VaccineRepository.GetAllVaccines() ?? new List<Vaccine>();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            details = new List<VaccinePackageDetail>();
            vaccines = new List<Vaccine>();
            StateHasChanged();
        }
    }

    private void ShowAddDetailModal()
    {
        newDetail = new VaccinePackageDetail { FKVaccinePackageId = PackageId };
        showModal = true;
    }

    private void CloseModal()
    {
        showModal = false;
    }

    private async Task HandleAddDetail()
    {
        VaccinePackageDetailRepository.AddVaccinePackageDetail(newDetail);
        showModal = false;
        await LoadData();
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/staff/vaccinepackage");
    }

    private async Task<Account> GetAccountDetails(string accountId)
    {
        return await Task.FromResult(new Account { AccountRole = "Staff" });
    }
}