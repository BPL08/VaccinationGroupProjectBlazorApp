@page "/customer/profile"
@inject ISessionStorageService SessionStorage
@inject NavigationManager Navigation
@inject IAccountRepository AccountRepository
@using BO.Entity
@using BO.Enums
@rendermode InteractiveServer

<div class="container mt-5 profile-container">
    <h2 class="text-center mb-4 text-primary fw-bold">Your Profile</h2>

    @if (!isAuthorized && hasRendered)
    {
        <div class="alert alert-danger text-center">Unauthorized access. Redirecting to login...</div>
    }
    else if (account == null)
    {
        <p class="lead text-center text-muted">Loading profile...</p>
    }
    else
    {
        <div class="card shadow-lg p-4 profile-card">
            <div class="row">
                <div class="col-md-4 text-center">
                    <img src="@(account.ProfileImage ?? "/images/default-profile.png")" alt="Profile Image" class="profile-img rounded-circle mb-3" />
                    <h4 class="text-primary">@account.UserName</h4>
                    <p class="text-muted">@account.AccountRole</p>
                </div>
                <div class="col-md-8">
                    <div class="profile-details">
                        <h5 class="text-success mb-3">Account Details</h5>
                        <div class="row mb-2">
                            <div class="col-4 fw-bold">Email:</div>
                            <div class="col-8">@account.Email</div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-4 fw-bold">Phone:</div>
                            <div class="col-8">@account.PhoneNumber</div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-4 fw-bold">Status:</div>
                            <div class="col-8">@account.Status</div>
                        </div>
                        @if (account.FKCenterId.HasValue)
                        {
                            <div class="row mb-2">
                                <div class="col-4 fw-bold">Center:</div>
                                <div class="col-8">@account.Center?.Name</div>
                            </div>
                        }
                        <div class="d-flex justify-content-end mt-4">
                            <button class="btn btn-primary" @onclick="GoBack">Back to Home</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<link rel="stylesheet" href="customer/Profile.razor.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

@code {
    private bool hasRendered = false;
    private bool isAuthorized = false;
    private Account account;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasRendered)
        {
            var accountIdString = await SessionStorage.GetItemAsync<string>("AccountId");

            if (string.IsNullOrEmpty(accountIdString) || !Guid.TryParse(accountIdString, out Guid accountId))
            {
                isAuthorized = false;
            }
            else
            {
                account = AccountRepository.GetAccountById(accountId);
                isAuthorized = account?.AccountRole == RoleEnums.Customer;
            }

            hasRendered = true;

            if (!isAuthorized)
            {
                Navigation.NavigateTo("/login");
            }
            StateHasChanged();
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/customer/home");
    }
}