@page "/customer/home"
@inject ISessionStorageService SessionStorage
@inject NavigationManager Navigation
@inject IAccountRepository AccountRepository
@inject IVaccineRepository VaccineRepository
@inject IVaccineCenterRepository VaccineCenterRepository
@inject IVaccinePackageDetailRepository VaccinePackageDetailRepository
@inject IVaccineHistoryRepository VaccineHistoryRepository
@inject IChildrenProfileRepository ChildrenProfileRepository
@using BO.Entity
@using BO.Enums
@rendermode InteractiveServer

<div class="container-fluid mt-4">
    <h2 class="text-center mb-4">Welcome to Vaccine Schedule System</h2>

    @if (!isAuthorized && hasRendered)
    {
        <div class="text-danger text-center">Unauthorized access. Redirecting to login...</div>
    }
    else if (vaccineCenters == null || vaccines == null || childrenProfiles == null || vaccineHistories == null)
    {
        <p class="lead text-center">Loading data...</p>
    }
    else
    {
        <!-- Giới thiệu cơ sở tiêm chủng -->
        <section class="mb-5">
            <h3>Our Vaccination Centers</h3>
            @if (!vaccineCenters.Any())
            {
                <p class="lead">No vaccination centers available.</p>
            }
            else
            {
                <div class="row">
                    @foreach (var center in vaccineCenters)
                    {
                        <div class="col-md-4 mb-3">
                            <div class="card shadow">
                                <div class="card-body">
                                    <h5 class="card-title">@center.Name</h5>
                                    <p class="card-text">
                                        <strong>Location:</strong> @center.Location<br />
                                        <strong>Contact:</strong> @center.ContactNumber<br />
                                        <strong>Email:</strong> @center.Email
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </section>

        <!-- Dịch vụ tiêm chủng -->
        <section class="mb-5">
            <h3>Our Vaccination Services</h3>
            @if (!vaccines.Any())
            {
                <p class="lead">No vaccines available.</p>
            }
            else
            {
                <div class="overflow-auto">
                    <table class="table table-striped table-hover table-bordered">
                        <thead class="table-dark">
                            <tr>
                                <th>Name</th>
                                <th>Category</th>
                                <th>Age Range</th>
                                <th>Price (VND)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var vaccine in vaccines)
                            {
                                <tr>
                                    <td>@vaccine.Name</td>
                                    <td>@(vaccine.Category?.CategoryName ?? "N/A")</td>
                                    <td>@vaccine.MinAge - @vaccine.MaxAge years</td>
                                    <td>@vaccine.Price</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </section>

        <!-- Bảng giá -->
        <section class="mb-5">
            <h3>Pricing</h3>
            @if (!vaccines.Any() && !vaccinePackageDetails.Any())
            {
                <p class="lead">No pricing information available.</p>
            }
            else
            {
                <div class="overflow-auto">
                    <table class="table table-striped table-hover table-bordered">
                        <thead class="table-dark">
                            <tr>
                                <th>Vaccine/Package</th>
                                <th>Description</th>
                                <th>Price (VND)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var vaccine in vaccines)
                            {
                                <tr>
                                    <td>@vaccine.Name</td>
                                    <td>@(vaccine.IngredientsDescription ?? "N/A")</td>
                                    <td>@vaccine.Price</td>
                                </tr>
                            }
                            @foreach (var packageDetail in vaccinePackageDetails)
                            {
                                <tr>
                                    <td>@packageDetail.VaccinePackage.PackageName</td>
                                    <td>@(packageDetail.VaccinePackage.PackageDescription ?? "N/A")</td>
                                    <td>@packageDetail.PackagePrice</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </section>

        <!-- Cẩm nang tiêm chủng -->
        <section class="mb-5">
            <h3>Vaccination Handbook</h3>
            @if (!childrenProfiles.Any())
            {
                <p class="lead">No children profiles found. Add a profile to see vaccination history.</p>
                <button class="btn btn-primary" @onclick="NavigateToProfile">Add Profile</button>
            }
            else
            {
                @foreach (var profile in childrenProfiles)
                {
                    <div class="mb-4">
                        <h5>@profile.Name (DOB: @profile.DateOfBirth.ToShortDateString())</h5>
                        @if (!vaccineHistories.Any(h => h.FKProfileId == profile.ProfileId))
                        {
                            <p>No vaccination history for this profile.</p>
                        }
                        else
                        {
                            <ul class="list-group">
                                @foreach (var history in vaccineHistories.Where(h => h.FKProfileId == profile.ProfileId))
                                {
                                    <li class="list-group-item">
                                        <strong>@history.Vaccine.Name</strong>: Administered on @history.AdministeredDate.ToShortDateString()
                                        (Dose #@history.DosedNumber) at @history.Center.Name
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                }
            }
        </section>

        <!-- Nút điều hướng -->
        <div class="d-flex gap-2 justify-content-center">
            <button class="btn btn-primary" @onclick="NavigateToProfile">View Your Children’s Profiles</button>
            <button class="btn btn-secondary" @onclick="NavigateToOrder">Order a Vaccination</button>
        </div>
    }
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

@code {
    private bool hasRendered = false;
    private bool isAuthorized = false;
    private List<VaccineCenter> vaccineCenters;
    private List<Vaccine> vaccines;
    private List<VaccinePackageDetail> vaccinePackageDetails;
    private List<ChildrenProfile> childrenProfiles;
    private List<VaccineHistory> vaccineHistories;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasRendered)
        {
            var accountIdString = await SessionStorage.GetItemAsync<string>("AccountId");

            if (string.IsNullOrEmpty(accountIdString) || !Guid.TryParse(accountIdString, out Guid accountId))
            {
                isAuthorized = false;
            }
            else
            {
                var account = await GetAccountDetails(accountId);
                isAuthorized = account?.AccountRole == RoleEnums.Customer;
            }

            hasRendered = true;

            if (!isAuthorized)
            {
                Navigation.NavigateTo("/login");
            }
            else
            {
                await LoadData();
            }
        }
    }

    private async Task LoadData()
    {
        try
        {
            var accountIdString = await SessionStorage.GetItemAsync<string>("AccountId");
            Guid.TryParse(accountIdString, out Guid accountId);

            vaccineCenters = VaccineCenterRepository.GetAllVaccineCenters() ?? new List<VaccineCenter>();
            vaccines = VaccineRepository.GetAllVaccines() ?? new List<Vaccine>();
            vaccinePackageDetails = VaccinePackageDetailRepository.GetAllVaccinePackageDetails() ?? new List<VaccinePackageDetail>();
            childrenProfiles = ChildrenProfileRepository.GetProfilesByAccountId(accountId) ?? new List<ChildrenProfile>();
            vaccineHistories = VaccineHistoryRepository.GetAllVaccineHistories() ?? new List<VaccineHistory>();

            StateHasChanged();
        }
        catch (Exception ex)
        {
            vaccineCenters = new List<VaccineCenter>();
            vaccines = new List<Vaccine>();
            vaccinePackageDetails = new List<VaccinePackageDetail>();
            childrenProfiles = new List<ChildrenProfile>();
            vaccineHistories = new List<VaccineHistory>();
            StateHasChanged();
        }
    }

    private async Task<Account> GetAccountDetails(Guid accountId)
    {
        return await Task.FromResult(AccountRepository.GetAccountById(accountId));
    }

    private void NavigateToProfile()
    {
        Navigation.NavigateTo("/customer/children-profiles");
    }

    private void NavigateToOrder()
    {
        Navigation.NavigateTo("/customer/order");
    }
}