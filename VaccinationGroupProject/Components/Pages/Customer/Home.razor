@page "/customer/home"
@inject ISessionStorageService SessionStorage
@inject NavigationManager Navigation
@inject IAccountRepository AccountRepository
@inject IVaccineRepository VaccineRepository
@inject IVaccineCenterRepository VaccineCenterRepository
@inject IVaccinePackageRepository VaccinePackageRepository
@inject IVaccinePackageDetailRepository VaccinePackageDetailRepository
@inject IVaccineHistoryRepository VaccineHistoryRepository
@inject IChildrenProfileRepository ChildrenProfileRepository
@inject IOrderRepository OrderRepository
@inject IOrderDetailRepository OrderDetailRepository
@inject IVaccinationScheduleRepository VaccinationScheduleRepository
@using BO.Entity
@using BO.Enums
@rendermode InteractiveServer

<!-- Thanh điều hướng cố định -->
<nav class="navbar navbar-expand-lg navbar-light fixed-top">
    <div class="container-fluid">
        <a class="navbar-brand text-white" href="/customer/home">Vaccine Schedule System</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                <li class="nav-item">
                    <button class="btn btn-outline-light mx-2" @onclick="NavigateToOrderDetails">View Order Details</button>
                </li>
                <li class="nav-item">
                    <button class="btn btn-outline-light mx-2" @onclick="NavigateToProfile">View Your Profile</button>
                </li>
                <li class="nav-item">
                    <button class="btn btn-outline-light mx-2" @onclick="NavigateToChildrenProfiles">View Children Profiles</button>
                </li>
                <li class="nav-item">
                    <button class="btn btn-primary mx-2" @onclick="NavigateToOrder">Order a Vaccination</button>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="container-fluid home-container">
    <!-- Header -->
    <header class="home-header text-center py-5">
        <h1 class="display-4 fw-bold text-white">Welcome to Vaccine Schedule System</h1>
    </header>

    @if (!isAuthorized && hasRendered)
    {
        <div class="alert alert-danger text-center my-4">Unauthorized access. Redirecting to login...</div>
    }
    else if (vaccineCenters == null || vaccines == null || childrenProfiles == null || vaccineHistories == null || vaccinePackages == null || orders == null || vaccinationSchedules == null)
    {
        <p class="lead text-center text-muted my-5">Loading data...</p>
    }
    else
    {
        <!-- Vaccination Centers -->
        <section class="section-centers my-5">
            <h2 class="section-title">Our Vaccination Centers</h2>
            @if (!vaccineCenters.Any())
            {
                <p class="text-muted">No vaccination centers available.</p>
            }
            else
            {
                <div class="row g-4">
                    @foreach (var center in vaccineCenters)
                    {
                        <div class="col-md-4">
                            <div class="card h-100 shadow-sm center-card">
                                <div class="card-body">
                                    <h5 class="card-title text-primary">@center.Name</h5>
                                    <p class="card-text">
                                        <strong>Location:</strong> @center.Location<br />
                                        <strong>Contact:</strong> @center.ContactNumber<br />
                                        <strong>Email:</strong> @center.Email
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </section>

        <!-- Vaccination Services -->
        <section class="section-services my-5">
            <h2 class="section-title">Our Vaccination Services</h2>
            <div class="mb-4">
                <div class="input-group w-50 mx-auto">
                    <input type="text" class="form-control" placeholder="Search vaccines or packages..." @bind="searchQuery" @bind:event="oninput" />
                    <button class="btn btn-primary" type="button" @onclick="Search">Search</button>
                </div>
            </div>
            @if (filteredVaccines == null || filteredVaccinePackages == null)
            {
                <p class="text-muted text-center">Loading vaccination services...</p>
            }
            else if (!filteredVaccines.Any() && !filteredVaccinePackages.Any())
            {
                <p class="text-muted">No vaccination services available.</p>
            }
            else
            {
                <div class="row g-4">
                    <div class="col-md-6">
                        <h4 class="text-success">Individual Vaccines</h4>
                        <div class="table-responsive">
                            <table class="table table-striped table-hover table-bordered">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Name</th>
                                        <th>Category</th>
                                        <th>Age Range</th>
                                        <th>Price (VND)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var vaccine in vaccines)
                                    {
                                        <tr>
                                            <td>@vaccine.Name</td>
                                            <td>@(vaccine.Category?.CategoryName ?? "N/A")</td>
                                            <td>@vaccine.MinAge - @vaccine.MaxAge years</td>
                                            <td>@vaccine.Price.ToString("N0")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <h4 class="text-success">Vaccine Packages</h4>
                        <div class="table-responsive">
                            <table class="table table-striped table-hover table-bordered">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Name</th>
                                        <th>Description</th>
                                        <th>Price (VND)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var package in vaccinePackages)
                                    {
                                        var packageDetails = vaccinePackageDetails.Where(d => d.FKVaccinePackageId == package.VaccinePackageId).ToList();
                                        var totalPrice = packageDetails.Sum(d => d.PackagePrice);
                                        <tr>
                                            <td>@package.PackageName</td>
                                            <td>@(package.PackageDescription ?? "N/A")</td>
                                            <td>@totalPrice.ToString("N0")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        </section>

        <!-- Pricing -->
        <section class="section-pricing my-5">
            <h2 class="section-title">Pricing</h2>
            @if (!vaccines.Any() && !vaccinePackageDetails.Any())
            {
                <p class="text-muted">No pricing information available.</p>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-bordered">
                        <thead class="table-dark">
                            <tr>
                                <th>Vaccine/Package</th>
                                <th>Description</th>
                                <th>Price (VND)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var vaccine in vaccines)
                            {
                                <tr>
                                    <td>@vaccine.Name</td>
                                    <td>@(vaccine.IngredientsDescription ?? "N/A")</td>
                                    <td>@vaccine.Price.ToString("N0")</td>
                                </tr>
                            }
                            @foreach (var packageDetail in vaccinePackageDetails)
                            {
                                <tr>
                                    <td>@packageDetail.VaccinePackage.PackageName</td>
                                    <td>@(packageDetail.VaccinePackage.PackageDescription ?? "N/A")</td>
                                    <td>@packageDetail.PackagePrice.ToString("N0")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </section>

        <section class="section-handbook my-5">
            <h2 class="section-title">Vaccination Handbook</h2>
            @if (!childrenProfiles.Any())
            {
                <p class="text-muted">No children profiles found. Add a profile to see vaccination history.</p>
                <button class="btn btn-primary mt-2" @onclick="NavigateToChildrenProfiles">Add Profile</button>
            }
            else
            {
                <div class="accordion" id="handbookAccordion">
                    @foreach (var profile in childrenProfiles)
                    {
                        var profileHistories = vaccineHistories.Where(h => h.FKProfileId == profile.ProfileId).ToList();
                        <div class="accordion-item shadow-sm mb-3">
                            <h2 class="accordion-header" id="heading-@profile.ProfileId">
                                <button class="accordion-button @(profileHistories.Any() ? "" : "collapsed")" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@profile.ProfileId" aria-expanded="@(profileHistories.Any() ? "true" : "false")" aria-controls="collapse-@profile.ProfileId">
                                    <span class="fw-bold text-primary">@profile.Name</span> <span class="text-muted ms-2">(DOB: @profile.DateOfBirth.ToShortDateString())</span>
                                </button>
                            </h2>
                            <div id="collapse-@profile.ProfileId" class="accordion-collapse collapse @(profileHistories.Any() ? "show" : "")" aria-labelledby="heading-@profile.ProfileId" data-bs-parent="#handbookAccordion">
                                <div class="accordion-body">
                                    @if (!profileHistories.Any())
                                    {
                                        <p class="text-muted">No vaccination history for this profile.</p>
                                    }
                                    else
                                    {
                                        <div class="timeline">
                                            @foreach (var history in profileHistories)
                                            {
                                                <div class="timeline-item">
                                                    <div class="timeline-dot"></div>
                                                    <div class="timeline-content card shadow-sm p-3">
                                                        <h6 class="text-success mb-1">@history.Vaccine.Name</h6>
                                                        <p class="mb-0">
                                                            <strong>Date:</strong> @history.AdministeredDate.ToShortDateString() <br />
                                                            <strong>Dose:</strong> #@history.DosedNumber <br />
                                                            <strong>Center:</strong> @history.Center.Name
                                                        </p>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </section>

        <!-- Order History -->
        <section class="section-orders my-5">
            <h2 class="section-title">Your Order History</h2>
            @if (!orders.Any())
            {
                <p class="text-muted">No orders found.</p>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-bordered">
                        <thead class="table-dark">
                            <tr>
                                <th>Order ID</th>
                                <th>Profile</th>
                                <th>Total Amount (VND)</th>
                                <th>Purchase Date</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in orders)
                            {
                                var profile = childrenProfiles.FirstOrDefault(p => p.ProfileId == order.FKProfileId);
                                <tr>
                                    <td>@order.OrderId</td>
                                    <td>@(profile?.Name ?? "N/A")</td>
                                    <td>@order.TotalAmountPrice.ToString("N0")</td>
                                    <td>@order.PurchaseDate.ToShortDateString()</td>
                                    <td>@(order.Status == 0 ? "Pending" : "Completed")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </section>

        <!-- Vaccination Schedule -->
        <section class="section-schedule my-5">
            <h2 class="section-title">Your Vaccination Schedule</h2>
            @if (!vaccinationSchedules.Any())
            {
                <p class="text-muted">No schedules found.</p>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-bordered">
                        <thead class="table-dark">
                            <tr>
                                <th>Profile</th>
                                <th>Vaccine</th>
                                <th>Center</th>
                                <th>Appointment Date</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var schedule in vaccinationSchedules)
                            {
                                var profile = childrenProfiles.FirstOrDefault(p => p.ProfileId == schedule.FKProfileId);
                                var orderDetail = orderDetails.FirstOrDefault(od => od.OrderDetailId == schedule.FKOrderDetailsId);
                                var vaccine = vaccines.FirstOrDefault(v => v.VaccineId == orderDetail?.FKVaccineId);
                                var center = vaccineCenters.FirstOrDefault(c => c.VacineCenterId == schedule.FKCenterId);
                                <tr>
                                    <td>@(profile?.Name ?? "N/A")</td>
                                    <td>@(vaccine?.Name ?? "N/A")</td>
                                    <td>@(center?.Name ?? "N/A")</td>
                                    <td>@schedule.AppointmentDate.ToShortDateString()</td>
                                    <td>@(schedule.Status == 0 ? "Pending" : "Completed")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </section>
    }
</div>

<link rel="stylesheet" href="customer/Home.razor.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

@code {
    private bool hasRendered = false;
    private bool isAuthorized = false;
    private List<VaccineCenter> vaccineCenters;
    private List<Vaccine> vaccines;
    private List<VaccinePackage> vaccinePackages;
    private List<VaccinePackageDetail> vaccinePackageDetails;
    private List<ChildrenProfile> childrenProfiles;
    private List<VaccineHistory> vaccineHistories;
    private List<Order> orders;
    private List<OrderDetail> orderDetails;
    private List<VaccinationSchedule> vaccinationSchedules;
    private string searchQuery = "";
private List<Vaccine> filteredVaccines;
private List<VaccinePackage> filteredVaccinePackages;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasRendered)
        {
            var accountIdString = await SessionStorage.GetItemAsync<string>("AccountId");

            if (string.IsNullOrEmpty(accountIdString) || !Guid.TryParse(accountIdString, out Guid accountId))
            {
                isAuthorized = false;
            }
            else
            {
                var account = await GetAccountDetails(accountId);
                isAuthorized = account?.AccountRole == RoleEnums.Customer;
            }

            hasRendered = true;

            if (!isAuthorized)
            {
                Navigation.NavigateTo("/login");
            }
            else
            {
                await LoadData();
                filteredVaccines = vaccines ?? new List<Vaccine>(); // Đảm bảo không null
                filteredVaccinePackages = vaccinePackages ?? new List<VaccinePackage>(); // Đảm bảo không null
            }
        }
    }

    private void Search()
    {
        if (string.IsNullOrWhiteSpace(searchQuery))
        {
            filteredVaccines = vaccines;
            filteredVaccinePackages = vaccinePackages;
        }
        else
        {
            filteredVaccines = vaccines.Where(v => v.Name.Contains(searchQuery, StringComparison.OrdinalIgnoreCase)).ToList();
            filteredVaccinePackages = vaccinePackages.Where(p => p.PackageName.Contains(searchQuery, StringComparison.OrdinalIgnoreCase)).ToList();
        }
        StateHasChanged();
    }

    private async Task LoadData()
    {
        try
        {
            var accountIdString = await SessionStorage.GetItemAsync<string>("AccountId");
            Guid.TryParse(accountIdString, out Guid accountId);

            vaccineCenters = VaccineCenterRepository.GetAllVaccineCenters() ?? new List<VaccineCenter>();
            vaccines = VaccineRepository.GetAllVaccines() ?? new List<Vaccine>();
            vaccinePackages = VaccinePackageRepository.GetAllVaccinePackages() ?? new List<VaccinePackage>();
            vaccinePackageDetails = VaccinePackageDetailRepository.GetAllVaccinePackageDetails() ?? new List<VaccinePackageDetail>();
            childrenProfiles = ChildrenProfileRepository.GetProfilesByAccountId(accountId) ?? new List<ChildrenProfile>();
            vaccineHistories = VaccineHistoryRepository.GetAllVaccineHistories() ?? new List<VaccineHistory>();
            orders = OrderRepository.GetOrdersByAccountId(accountId) ?? new List<Order>();
            orderDetails = OrderDetailRepository.GetAllOrderDetails() ?? new List<OrderDetail>();
            vaccinationSchedules = VaccinationScheduleRepository.GetSchedulesByAccountId(accountId) ?? new List<VaccinationSchedule>();

            StateHasChanged();
        }
        catch (Exception ex)
        {
            vaccineCenters = new List<VaccineCenter>();
            vaccines = new List<Vaccine>();
            vaccinePackages = new List<VaccinePackage>();
            vaccinePackageDetails = new List<VaccinePackageDetail>();
            childrenProfiles = new List<ChildrenProfile>();
            vaccineHistories = new List<VaccineHistory>();
            orders = new List<Order>();
            orderDetails = new List<OrderDetail>();
            vaccinationSchedules = new List<VaccinationSchedule>();
            StateHasChanged();
        }
    }

    private async Task<Account> GetAccountDetails(Guid accountId)
    {
        return await Task.FromResult(AccountRepository.GetAccountById(accountId));
    }

    private void NavigateToProfile()
    {
        Navigation.NavigateTo("/customer/profile");
    }

    private void NavigateToChildrenProfiles()
    {
        Navigation.NavigateTo("/customer/children-profiles");
    }

    private void NavigateToOrder()
    {
        Navigation.NavigateTo("/customer/order");
    }

    private void NavigateToOrderDetails()
    {
        Navigation.NavigateTo("/customer/order-details");
    }
}